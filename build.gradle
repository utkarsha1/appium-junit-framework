buildscript {
}

apply plugin: 'java'
apply plugin: 'idea'

jar {
    baseName = 'appium-ui-tests'
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.0'

configurations {
    testCompile.extendsFrom compile
    testRuntime.extendsFrom runtime
    integrationCompile.extendsFrom compile
    integrationRuntime.extendsFrom runtime

    all*.exclude(group:'com.google.collections', module:'google-collections')
}

sourceSets {
    integration {
        java {
            srcDirs = ['src/integration/java']
            compileClasspath += project.sourceSets.main.output
            runtimeClasspath += project.sourceSets.main.output
        }

        resources {
            srcDirs = ['src/integration/resources']
            srcDirs += project.sourceSets.main.resources.srcDirs
        }

        compileClasspath += project.sourceSets.main.runtimeClasspath
    }
}


dependencies {
    compile 'junit:junit:4.12'
    compile 'org.seleniumhq.selenium:selenium-java:LATEST'
    compile 'io.appium:java-client:3.1.0'
    compile 'org.mockito:mockito-all:1.9.5'
    compile 'com.saucelabs:sauce_junit:2.1.20'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'com.google.guava:guava:18.0'
    compile 'joda-time:joda-time:2.3'
    compile 'org.apache.httpcomponents:httpclient:4.1.1'
}

task integrationTest (type: Test) {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath += sourceSets.integration.runtimeClasspath

    def iOSOnly = project.hasProperty('iOSOnly')
    jvmArgs = ['-DiOSOnly=' + iOSOnly]

    def androidOnly = project.hasProperty('androidOnly')
    jvmArgs = ['-DandroidOnly=' + androidOnly]

    def buildNumber = project.hasProperty('buildNumber') ? project.property('buildNumber') : ''
    jvmArgs = ['-DbuildNumber=' + buildNumber]
}

idea.module {
    scopes.TEST.plus += [configurations.integrationRuntime]
    scopes.TEST.plus += [configurations.integrationCompile]
    testSourceDirs += sourceSets.integration.java.srcDirs
    testSourceDirs += sourceSets.integration.resources.srcDirs
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task zip(type: Zip) {
    from configurations.runtime.allArtifacts.files
    from configurations.runtime
    into (project.name + '-' + project.version)
}
